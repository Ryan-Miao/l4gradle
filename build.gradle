//project description
description = 'The shared API for the application'
task hello <<{

		println 'Hello World'
}
//task description
hello{
    description = 'This is hello of the build group'
    group = 'build'
}

task upper <<{
	String someString = 'my_NaMe'
	println "Original:"+someString
	println "Upper case:"+someString.toUpperCase()
}

task count <<{
	4.times { 
		println "$it"
	}
}
//依赖
task intro(dependsOn: hello) <<{
	println "I'm Gradle"
}

//依赖声明顺序不必先后
task taskX(dependsOn:'taskY')<<{
	println 'taskX'
}
task taskY<<{
	println 'taskY'
}
//动态创建任务
5.times{
	counter ->
	task "task$counter" <<{
		println "I'm task number $counter"
	}
}

//通过api通信
task0.dependsOn task2,task3

//利用AntBuilder执行ant.loadfile
task loadfile << {
    def files = file('../antLoadfileResources').listFiles().sort()
    files.each { File file ->
        if (file.isFile()) {
            ant.loadfile(srcFile: file, property: file.name)
            println " *** $file.name ***"
            println "${ant.properties[file.name]}"
        }
    }
}

//利用方法组织脚本逻辑
task checksum << {
    fileList('../antLoadfileResources').each{File file ->
        ant.checksum(file:file,property:"cs_$file.name")
        println "$file.name Checksum:${ant.properties['cs_$file.name']}"
    }
}
File[] fileList(String dir){
    file(dir).listFiles({file -> file.isFile()} as FileFilter).sort()
}

//定义默认任务
defaultTasks 'clean','run'
task clean << {
    println 'Default Cleaning'
}
task run << {
    println 'Default Running'
}
task other << {
    println "I'm not a default task!"
}

//依赖任务的不同输出
task distribution << {
    println "We build the zip with version=$version"
}
task release(dependsOn: 'distribution') << {
    println 'We release now'
}
gradle.taskGraph.whenReady {taskGraph ->
    if (taskGraph.hasTask(release)) {
        version = '1.0'
    } else {
        version = '1.0-SNAPSHOT'
    }
}
//依赖管理
apply plugin:'java'
repositories{
    mavenCentral()
}
dependencies{
    compile group :'org.hibernate',name:'hibernate-core',version:'3.6.7.Final'
    testCompile group : 'junit',name:'junit',version:'4.+'
}
////publish produces lvy
//uploadArchves{
//    repositories{
//        try{
//            credentials{
//                username "username"
//                password "pw"
//            }
//            url "http://repo,mycompany.com"
//        }finally {
//
//        }
//    }
//}
////publish maven
//apply plugin:'maven'
//uploadArchives{
//    repositories{
//        mavenDeployer{
//            repository(url:"file://localhost/tmp/myRepo/")
//        }
//    }
//}
//from another project's tasks
//project('projectA'){
//    task taskX(dependsOn:':projectB:taskY') <<{
//        println 'taskX'
//    }
//}
//project('projectB'){
//    task taskY << {
//        println 'taskY'
//    }
//}
//使用task对象添加依赖
taskY.dependsOn task0
//使用闭包添加依赖
task taskM << {
    println 'taskM'
}
taskM.dependsOn{
    tasks.findAll {task -> task.name.startsWith('lib')}
}
task lib1 << {
    println 'lib1'
}
task lib2 << {
    println 'lib2'
}
task notALib << {
    println 'notALib'
}
